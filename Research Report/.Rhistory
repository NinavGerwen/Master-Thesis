?function
quit
?function
()
dsf
n <- 100
matrix(data = rep(rnorm(n), k), ncol = k)
k <- 5
matrix(data = rep(rnorm(n), k), ncol = k)
matrix(data = rep(rnorm(n), k), ncol = k, byrow = TRUE)
gamma <- 0.25
theta <- rnorm(n)
theta_k <- matrix(data = rep(theta, k), ncol = k)
beta <- matrix(data = rep(c(-2, -1, 0, 1, 2), k), ncol = k, nrow = n,
byrow = TRUE)
alpha <- matrix(data = 0.7, ncol = k, nrow = n)
gamma <- 0.25
prob <- gamma + (1 - gamma) * (exp((alpha * theta) + beta) / (1 + exp((alpha + theta) + beta)))
View(prob)
alpha <- matrix(data = rep(c(0.7, 0.85, 1, 1.15, 1.3), k), ncol = k,
nrow = n, byrow = TRUE)
View(alpha)
alpha <- matrix(data = rep(c(0.7, 0.85, 1, 1.15, 1.3), k), ncol = k,
nrow = 15, byrow = TRUE)
View(alpha)
k <- 15
alpha <- matrix(data = rep(c(0.7, 0.85, 1, 1.15, 1.3), k), ncol = k,
nrow = n, byrow = TRUE)
View(alpha)
one.pl <- function(theta, beta){
prob <- exp(theta - beta) / (1 + exp(theta - beta))
return(prob)
}
## Question Dave: is er een probleem met ene functie - beta en andere + beta
two.pl <- function(theta, alpha, beta){
prob <- exp((alpha * theta) + beta) / (1 + exp((alpha * theta) + beta))
return(prob)
}
three.pl <- function(theta, alpha, beta, gamma){
prob <- gamma + (1 - gamma) * (exp((alpha * theta) + beta) / (1 + exp((alpha + theta) + beta)))
return(prob)
}
data.gen <- function(n, k, model){
theta <- matrix(data = rep(rnorm(n), k), ncol = k)
beta <- matrix(data = rep(c(-2, -1, 0, 1, 2), k), nrow = n, ncol = k, byrow = TRUE)
if(model == "1PL"){
Z <- one.pl(theta = theta, beta = beta)
}
if(model == "2PL"){
alpha <- matrix(data = rep(c(0.7, 0.85, 1, 1.15, 1.3), k), ncol = k,
nrow = n, byrow = TRUE)
Z <- two.pl(theta = theta, alpha = alpha, beta = beta)
}
if(model == "3PL"){
alpha <- matrix(data = rep(c(0.7, 0.85, 1, 1.15, 1.3), k), ncol = k,
nrow = n, byrow = TRUE)
gamma <- 0.15 + rnorm(1, 0, 0.05)
Z <- three.pl(theta = theta, alpha = alpha, beta = beta, gamma = gamma)
}
data <- matrix(data = rbinom(n = n * k, size = 1, prob = Z), ncol = k, nrow = n)
return(data)
}
data.gen(100, 5, "1PL")
data.gen(100, 5, "1PL")
data.gen(100, 5, "1PL")
space <- list(rep(NA, 100))
View(space)
View(space)
space <- list(NA)
View(space)
list[i]
list[1]
space[1]
for(i in 1:100){
list[i] <- data.gen(100, 5, "1PL")
}
space[i] <- data.gen(100, 5, "1PL")
for(i in 1:100){
space[i] <- data.gen(100, 5, "1PL")
}
space <- list()
for(i in 1:100){
space[i] <- data.gen(100, 5, "1PL")
}
for(i in seq_along(100)){
space[i] <- data.gen(100, 5, "1PL")
}
View(space)
for(i in seq_along(matrix(data = NA, nrow = 100, ncol = 5))){
space[i] <- data.gen(100, 5, "1PL")
}
View(space)
space[[i]] <- data.gen(100, 5, "1PL")
for(i in seq_along(matrix(data = NA, nrow = 100, ncol = 5))){
space[[i]] <- data.gen(100, 5, "1PL")
}
View(space)
space[[1]]
space[1]
space[2]
space[[3]]
?ltm
??ltm
rasch(data.gen(100, 5, "1PL"))
library(ltm)
rasch(data.gen(100, 5, "1PL"))
ltm(data.gen(100, 5, "1PL"))
mml1 <- rasch(data.gen(100, 5, "1PL"))
mml2 <- ltm(data.gen(100, 5, "1PL") ~ z1, IRT.param = TRUE)
mml3 <- tpm(data.gen(100, 5, "1PL"))
anova(mml1, mml2)
anova(mml2, mml3)
test_dat <- data.gen(100, 5, "1PL")
test_dat <- data.gen(100, 5, "1PL")
mml1 <- rasch(test_dat)
mml2 <- ltm(test_dat ~ z1, IRT.param = TRUE)
mml3 <- tpm(test_dat)
anova(mml1, mml2)
anova(mml2, mml3)
