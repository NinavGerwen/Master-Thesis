source("Functions/model-calculations.R")
source("Functions/data-generation.R")
source("Functions/missingness.R")
source("Functions/data-aggregation.R")
source("Functions/lr-test-calculation.R")
source("Functions/chi-square-diff-test.R")
frame <- matrix(NA, nrow = 2, ncol = 10)
for(c in 1:10){
frame[1:2, c] <- c(0, 1)
}
expand.grid(as.data.frame(frame))
scorepatterns <- matrix(NA, nrow = n, ncol = k)
test <- data.gen(500, 5, model = "2PL") %>%
missify(., .20)
library(dplyr)
library(magrittr)
test <- data.gen(500, 5, model = "2PL") %>%
missify(., .20)
temp_model <- ltm(test ~ z1)
library(ltm)
temp_model <- ltm(test ~ z1)
save <- factor.scores(temp_model)
scorepatterns <- matrix(NA, nrow = 100, ncol = k)
scorepatterns <- matrix(NA, nrow = 500, ncol = 5)
for(d in 1:k){
scorepatterns[1:2, d] <- c(0, 1)
}
for(d in 1:5){
scorepatterns[1:2, d] <- c(0, 1)
}
scorepatterns <- scorepatterns %>%
as.data.frame(.) %>%
expand.grid(.) %>%
mutate(fr = 0)
scorepatterns <- matrix(NA, ncol = 5)
for(d in 1:5){
scorepatterns[1:2, d] <- c(0, 1)
}
scorepatterns <- matrix(NA, nrow = 2, ncol = 5)
for(d in 1:5){
scorepatterns[1:2, d] <- c(0, 1)
}
scorepatterns <- scorepatterns %>%
as.data.frame(.) %>%
expand.grid(.) %>%
mutate(fr = 0)
scorepatterns
score.pattern.aggr(test)
score.pattern.aggr(test, 500)
scorepatterns
score.pattern.aggr(test, 500)
t1 >- score.pattern.aggr(test, 500)
t1 ,- score.pattern.aggr(test, 500)
t1 <- score.pattern.aggr(test, 500)
tt <- rbind(scorepatterns, t1)
tt
tt <- rbind(scorepatterns, t1) %>% score.pattern.aggr(.)
tt <- rbind(scorepatterns, t1) %>% score.pattern.aggr(., n = nrow(.))
tt
tt
scorepatterns <- matrix(NA, nrow = 2, ncol = 5)
for(d in 1:5){
scorepatterns[1:2, d] <- c(0, 1)
}
scorepatterns <- scorepatterns %>%
as.data.frame(.) %>%
expand.grid(.) %>%
mutate(fr = 0)
scorepatterns
t1 <- score.pattern.aggr(test, 500)
t1
tt <- rbind(scorepatterns, t1)
tt
tt %>% score.pattern.aggr(.)
tt %>% score.pattern.aggr(., n = nrow(.))
t1 <- score.pattern.aggr(test, 500)
t1
tt <- rbind(scorepatterns, t1)
tt
tt %>% aggregate(fr ~ ., data = ., sum)
twice <- tt %>% aggregate(fr ~ ., data = ., sum)
t1 <- score.pattern.aggr(test, 500)
t1
tt <- rbind(scorepatterns, t1)
tt
twice <- tt %>% aggregate(fr ~ ., data = ., sum)
twice
twice %>% factor.scores(.)
?factor.scores
twice %>% factor.scores(test, resp.patterns = .)
twice %>% factor.scores(test, resp.patterns = .)
View(tt)
factor.scores(temp_model, resp.patterns = t1)
factor.scores(temp_model, resp.patterns = scorepatterns)
test <- data.gen(500, 5, model = "2PL")
temp_model <- ltm(test ~ z1)
scorepatterns <- matrix(NA, nrow = 2, ncol = 5)
for(d in 1:5){
scorepatterns[1:2, d] <- c(0, 1)
}
scorepatterns <- scorepatterns %>%
as.data.frame(.) %>%
expand.grid(.) %>%
mutate(fr = 0)
scorepatterns
scorepatterns <- scorepatterns %>%
as.data.frame(.) %>%
expand.grid(.)
scorepatterns <- matrix(NA, nrow = 2, ncol = 5)
for(d in 1:5){
scorepatterns[1:2, d] <- c(0, 1)
}
scorepatterns <- scorepatterns %>%
as.data.frame(.) %>%
expand.grid(.)
scorepatterns
factor.scores(temp_model, resp.patterns = scorepatterns)
test <- data.gen(500, 10, model = "2PL")
test <- data.gen(500, 10, model = "2PL")
temp_model <- ltm(test ~ z1)
scorepatterns <- matrix(NA, nrow = 2, ncol = 10)
for(d in 1:5){
scorepatterns[1:2, d] <- c(0, 1)
}
scorepatterns <- scorepatterns %>%
as.data.frame(.) %>%
expand.grid(.)
scorepatterns
factor.scores(temp_model, resp.patterns = scorepatterns)
for(d in 1:10){
scorepatterns[1:2, d] <- c(0, 1)
}
scorepatterns <- scorepatterns %>%
as.data.frame(.) %>%
expand.grid(.)
scorepatterns <- matrix(NA, nrow = 2, ncol = 10)
for(d in 1:10){
scorepatterns[1:2, d] <- c(0, 1)
}
scorepatterns <- scorepatterns %>%
as.data.frame(.) %>%
expand.grid(.)
scorepatterns
factor.scores(temp_model, resp.patterns = scorepatterns)
saved <- factor.scores(temp_model, resp.patterns = scorepatterns)
saved$coef
View(saved)
saved$score.dat[, 10:11]
saved$score.dat[, 11:12]
scorepatterns %>%
as.data.frame(.) %>%
expand.grid(.) %>%
factor.scores(temp_model, resp.patterns = .)$score.dat[, (k+1):(k+2)]
scorepatterns %>%
as.data.frame(.) %>%
expand.grid(.) %>%
factor.scores(temp_model, resp.patterns = .)$score.dat[, (k+1):(k+2)]
scorepatterns %>%
factor.scores(temp_model, resp.patterns = .)$score.dat[, (k+1):(k+2)]
scorepatterns <- matrix(NA, nrow = 2, ncol = 10)
for(d in 1:10){
scorepatterns[1:2, d] <- c(0, 1)
}
scorepatterns <- scorepatterns %>%
as.data.frame(.) %>%
expand.grid(.) %>%
factor.scores(temp_model, resp.patterns = .)$score.dat[, (k+1):(k+2)]
k <- 10
k <- 10
test <- data.gen(500, k, model = "2PL")
temp_model <- ltm(test ~ z1)
scorepatterns <- matrix(NA, nrow = 2, ncol = k)
for(d in 1:k){
scorepatterns[1:2, d] <- c(0, 1)
}
scorepatterns <- scorepatterns %>%
as.data.frame(.) %>%
expand.grid(.) %>%
factor.scores(temp_model, resp.patterns = .)$score.dat[, (k+1):(k+2)]
scorepatterns[, k]
scorepatterns[, (k -1]
scorepatterns[, (k-1)]
scorepatterns <- scorepatterns %>%
as.data.frame(.) %>%
expand.grid(.) %>%
factor.scores(temp_model, resp.patterns = .)$score.dat[, c((k+1),(k+2))]
k <- 10
test <- data.gen(500, k, model = "2PL")
temp_model <- ltm(test ~ z1)
scorepatterns <- matrix(NA, nrow = 2, ncol = k)
for(d in 1:k){
scorepatterns[1:2, d] <- c(0, 1)
}
scorepatterns %>%
as.data.frame(.) %>%
expand.grid(.) %>%
factor.scores(temp_model, resp.patterns = .)$score.dat[, c((k+1),(k+2))]
testing <- factor.scores(temp_model, resp.patterns = scorepatterns)$score.dat[, c((k+1),(k+2))]
testing <- factor.scores(temp_model, resp.patterns = scorepatterns)$score.dat[, (k+1):(k+2)]
testing <- factor.scores(temp_model, resp.patterns = scorepatterns)$score.dat[, (k+1):(k+2)]
k <- 10
test <- data.gen(500, k, model = "2PL")
temp_model <- ltm(test ~ z1)
scorepatterns <- matrix(NA, nrow = 2, ncol = k)
for(d in 1:k){
scorepatterns[1:2, d] <- c(0, 1)
}
scorepatterns <- scorepatterns %>%
as.data.frame(.) %>%
expand.grid(.)
testing <- factor.scores(temp_model, resp.patterns = scorepatterns)$score.dat[, (k+1):(k+2)]
testing
testing$Obs - testing$Exp
pearson.test <- function(temp_model, k){
scorepatterns <- matrix(NA, nrow = 2, ncol = k)
for(d in 1:k){
scorepatterns[1:2, d] <- c(0, 1)
}
scorepatterns <- scorepatterns %>%
as.data.frame(.) %>%
expand.grid(.)
obs_exp <- factor.scores(temp_model, resp.patterns = scorepatterns)$score.dat[, (k+1):(k+2)]
chisq_value <- sum( ( (obs_exp$Obs - obs_exp$Exp)^2 / obs_exp$Exp ) )
p_value <- 1 - pchisq(q = chisq_value, df = 2^k - 1 - 2*k)
return(p_value)
}
test <- data.gen(500, k, model = "2PL")
temp_model <- ltm(test ~ z1)
pearson.test(temp_model, k = 10)
p_values <- rep(NA, 20)
for(i in 1:20){
data <- data.gen(200, 5, model = "2PL")
model <- ltm(data ~ z1)
p_values[i] <- pearson.test(model, 5)
}
p_values
sum(ifelse(p_values < 0.05, 1, 0)
sum(ifelse(p_values < 0.05, 1, 0)
sum(ifelse(p_values < 0.05, 1, 0))
sum(ifelse(p_values < 0.05, 1, 0))/20
p_values <- rep(NA, 100)
for(i in 1:100){
data <- data.gen(200, 5, model = "2PL")
model <- ltm(data ~ z1)
p_values[i] <- pearson.test(model, 5)
}
sum(ifelse(p_values < 0.05, 1, 0))/20
sum(ifelse(p_values < 0.05, 1, 0))/100
p_values <- rep(NA, 100)
for(i in 1:100){
data <- data.gen(200, 5, model = "3PL")
model <- ltm(data ~ z1)
p_values[i] <- pearson.test(model, 5)
}
sum(ifelse(p_values < 0.05, 1, 0))/100
p_values <- rep(NA, 100)
for(i in 1:100){
data <- data.gen(1500, 5, model = "3PL")
model <- ltm(data ~ z1)
p_values[i] <- pearson.test(model, 5)
}
sum(ifelse(p_values < 0.05, 1, 0))/100
p_values
p_values <- rep(NA, 100)
for(i in 1:100){
data <- data.gen(1500, 10, model = "3PL")
model <- ltm(data ~ z1)
p_values[i] <- pearson.test(model, 10)
}
sum(ifelse(p_values < 0.05, 1, 0))/100
k <- 20
test <- data.gen(500, k, model = "2PL")
temp_model <- ltm(test ~ z1)
scorepatterns <- matrix(NA, nrow = 2, ncol = k)
for(d in 1:k){
scorepatterns[1:2, d] <- c(0, 1)
}
scorepatterns <- scorepatterns %>%
as.data.frame(.) %>%
expand.grid(.)
testing <- factor.scores(temp_model, resp.patterns = scorepatterns)$score.dat[, (k+1):(k+2)]
k <- 10
test <- data.gen(500, k, model = "2PL")
temp_model <- ltm(test ~ z1)
scorepatterns <- matrix(NA, nrow = 2, ncol = k)
for(d in 1:k){
scorepatterns[1:2, d] <- c(0, 1)
}
scorepatterns <- scorepatterns %>%
as.data.frame(.) %>%
expand.grid(.)
testing <- factor.scores(temp_model, resp.patterns = scorepatterns)$score.dat[, (k+1):(k+2)]
testing <- factor.scores(temp_model, resp.patterns = scorepatterns)$score.dat[, (k+1):(k+2)]
testing
source("Functions/model-calculations.R")
source("Functions/data-generation.R")
source("Functions/missingness.R")
source("Functions/data-aggregation.R")
source("Functions/lr-test-calculation.R")
source("Functions/chi-square-diff-test.R")
source("Functions/pearson-chi-sq-test.R")
## Data generation is based on three models, therefore we created functions for
## the calculations of every model (1PL - 2PL - 3PL)
source("Functions/model-calculations.R")
source("Functions/data-generation.R")
source("Functions/missingness.R")
source("Functions/fit-indices calculations.R")
source("Functions/data-aggregation.R")
View(pearson.test)
testdata <- data.gen(15000, 20, "2PL")
library(ltm)
testmodel <- ltm(testdata ~ z1, IRT.param = TRUE)
pearson.test(testmodel, 20)
library(dplyr)
pearson.test(testmodel, 20)
source("Functions/model-calculations.R")
source("Functions/data-generation.R")
source("Functions/missingness.R")
source("Functions/data-aggregation.R")
source("Functions/lr-test-calculation.R")
source("Functions/chi-square-diff-test.R")
source("Functions/pearson-chi-sq-test.R")
## Data generation is based on three models, therefore we created functions for
## the calculations of every model (1PL - 2PL - 3PL)
source("Functions/model-calculations.R")
source("Functions/data-generation.R")
source("Functions/missingness.R")
source("Functions/fit-indices calculations.R")
source("Functions/data-aggregation.R")
data.gen(1500, 10, "2PL")
?tpm
View(mirt.diff.test)
2^15
